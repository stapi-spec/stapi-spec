components:
  schemas:
    Conformance:
      properties:
        conformsTo:
          items:
            type: string
          title: Conformsto
          type: array
      required:
      - conformsTo
      title: Conformance
      type: object
    GeometryCollection-Input:
      description: GeometryCollection Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        geometries:
          items:
            discriminator:
              mapping:
                GeometryCollection: '#/components/schemas/GeometryCollection-Input'
                LineString: '#/components/schemas/LineString'
                MultiLineString: '#/components/schemas/MultiLineString'
                MultiPoint: '#/components/schemas/MultiPoint'
                MultiPolygon: '#/components/schemas/MultiPolygon'
                Point: '#/components/schemas/Point'
                Polygon: '#/components/schemas/Polygon'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/Point'
            - $ref: '#/components/schemas/MultiPoint'
            - $ref: '#/components/schemas/LineString'
            - $ref: '#/components/schemas/MultiLineString'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/MultiPolygon'
            - $ref: '#/components/schemas/GeometryCollection-Input'
          title: Geometries
          type: array
        type:
          const: GeometryCollection
          title: Type
          type: string
      required:
      - type
      - geometries
      title: GeometryCollection
      type: object
    GeometryCollection-Output:
      description: GeometryCollection Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        geometries:
          items:
            discriminator:
              mapping:
                GeometryCollection: '#/components/schemas/GeometryCollection-Output'
                LineString: '#/components/schemas/LineString'
                MultiLineString: '#/components/schemas/MultiLineString'
                MultiPoint: '#/components/schemas/MultiPoint'
                MultiPolygon: '#/components/schemas/MultiPolygon'
                Point: '#/components/schemas/Point'
                Polygon: '#/components/schemas/Polygon'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/Point'
            - $ref: '#/components/schemas/MultiPoint'
            - $ref: '#/components/schemas/LineString'
            - $ref: '#/components/schemas/MultiLineString'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/MultiPolygon'
            - $ref: '#/components/schemas/GeometryCollection-Output'
          title: Geometries
          type: array
        type:
          const: GeometryCollection
          title: Type
          type: string
      required:
      - type
      - geometries
      title: GeometryCollection
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    LineString:
      description: LineString Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          items:
            anyOf:
            - $ref: '#/components/schemas/Position2D'
            - $ref: '#/components/schemas/Position3D'
          minItems: 2
          title: Coordinates
          type: array
        type:
          const: LineString
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: LineString
      type: object
    Link:
      properties:
        body:
          description: For POST requests, the resource can specify the HTTP body as
            a JSON object.
          title: Body
        headers:
          additionalProperties:
            anyOf:
            - type: string
            - items:
                type: string
              type: array
          description: Object key values pairs they map to headers
          title: Headers
          type: object
        href:
          description: The location of the resource
          format: uri
          minLength: 1
          title: Href
          type: string
        merge:
          default: false
          description: 'This is only valid when the server is responding to POST request.
            If merge is true, the client is expected to merge the body value into
            the current request body before following the link. This avoids passing
            large post bodies back and forth when following links, particularly for
            navigating pages through the POST /search endpoint. NOTE: To support form
            encoding it is expected that a client be able to merge in the key value
            pairs specified as JSON {''next'': ''token''} will become &next=token.'
          title: Merge
          type: boolean
        method:
          $ref: '#/components/schemas/RequestMethod'
          default: GET
          description: Specifies the HTTP method that the resource expects
          title: Method
        rel:
          description: Relation type of the link
          title: Rel
          type: string
        title:
          description: Title of the resource
          title: Title
          type: string
        type:
          description: The media type of the resource
          title: Type
          type: string
      required:
      - href
      - rel
      title: Link
      type: object
    MultiLineString:
      description: MultiLineString Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          items:
            items:
              anyOf:
              - $ref: '#/components/schemas/Position2D'
              - $ref: '#/components/schemas/Position3D'
            minItems: 2
            type: array
          title: Coordinates
          type: array
        type:
          const: MultiLineString
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: MultiLineString
      type: object
    MultiPoint:
      description: MultiPoint Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          items:
            anyOf:
            - $ref: '#/components/schemas/Position2D'
            - $ref: '#/components/schemas/Position3D'
          title: Coordinates
          type: array
        type:
          const: MultiPoint
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: MultiPoint
      type: object
    MultiPolygon:
      description: MultiPolygon Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          items:
            items:
              items:
                anyOf:
                - $ref: '#/components/schemas/Position2D'
                - $ref: '#/components/schemas/Position3D'
              minItems: 4
              type: array
            type: array
          title: Coordinates
          type: array
        type:
          const: MultiPolygon
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: MultiPolygon
      type: object
    Opportunity:
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        geometry:
          anyOf:
          - discriminator:
              mapping:
                GeometryCollection: '#/components/schemas/GeometryCollection-Output'
                LineString: '#/components/schemas/LineString'
                MultiLineString: '#/components/schemas/MultiLineString'
                MultiPoint: '#/components/schemas/MultiPoint'
                MultiPolygon: '#/components/schemas/MultiPolygon'
                Point: '#/components/schemas/Point'
                Polygon: '#/components/schemas/Polygon'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/Point'
            - $ref: '#/components/schemas/MultiPoint'
            - $ref: '#/components/schemas/LineString'
            - $ref: '#/components/schemas/MultiLineString'
            - $ref: '#/components/schemas/Polygon'
            - $ref: '#/components/schemas/MultiPolygon'
            - $ref: '#/components/schemas/GeometryCollection-Output'
          - type: 'null'
          title: Geometry
        id:
          anyOf:
          - type: integer
          - type: string
          - type: 'null'
          title: Id
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        properties:
          anyOf:
          - $ref: '#/components/schemas/OpportunityProperties'
          - type: 'null'
        type:
          const: Feature
          default: Feature
          title: Type
          type: string
      required:
      - geometry
      - properties
      title: Opportunity
      type: object
    OpportunityCollection:
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        features:
          items:
            $ref: '#/components/schemas/Opportunity'
          title: Features
          type: array
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        type:
          const: FeatureCollection
          default: FeatureCollection
          title: Type
          type: string
      required:
      - features
      title: OpportunityCollection
      type: object
    OpportunityPayload:
      properties:
        datetime:
          maxItems: 2
          minItems: 2
          prefixItems:
          - format: date-time
            type: string
          - format: date-time
            type: string
          title: Datetime
          type: array
        filter:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Filter
        geometry:
          discriminator:
            mapping:
              GeometryCollection: '#/components/schemas/GeometryCollection-Input'
              LineString: '#/components/schemas/LineString'
              MultiLineString: '#/components/schemas/MultiLineString'
              MultiPoint: '#/components/schemas/MultiPoint'
              MultiPolygon: '#/components/schemas/MultiPolygon'
              Point: '#/components/schemas/Point'
              Polygon: '#/components/schemas/Polygon'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/Point'
          - $ref: '#/components/schemas/MultiPoint'
          - $ref: '#/components/schemas/LineString'
          - $ref: '#/components/schemas/MultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/MultiPolygon'
          - $ref: '#/components/schemas/GeometryCollection-Input'
          title: Geometry
        limit:
          default: 10
          title: Limit
          type: integer
        next:
          anyOf:
          - type: string
          - type: 'null'
          title: Next
      required:
      - datetime
      - geometry
      title: OpportunityPayload
      type: object
    OpportunityProperties:
      additionalProperties: true
      properties:
        datetime:
          title: Datetime
          type: string
        product_id:
          title: Product Id
          type: string
      required:
      - datetime
      - product_id
      title: OpportunityProperties
      type: object
    Order:
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        created:
          format: date-time
          title: Created
          type: string
        geometry:
          discriminator:
            mapping:
              GeometryCollection: '#/components/schemas/GeometryCollection-Output'
              LineString: '#/components/schemas/LineString'
              MultiLineString: '#/components/schemas/MultiLineString'
              MultiPoint: '#/components/schemas/MultiPoint'
              MultiPolygon: '#/components/schemas/MultiPolygon'
              Point: '#/components/schemas/Point'
              Polygon: '#/components/schemas/Polygon'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/Point'
          - $ref: '#/components/schemas/MultiPoint'
          - $ref: '#/components/schemas/LineString'
          - $ref: '#/components/schemas/MultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/MultiPolygon'
          - $ref: '#/components/schemas/GeometryCollection-Output'
          title: Geometry
        id:
          title: Id
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        properties:
          $ref: '#/components/schemas/OrderProperties'
        stapi_type:
          const: Order
          default: Order
          title: Stapi Type
          type: string
        stapi_version:
          default: 0.1.0
          title: Stapi Version
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
          title: Status
        type:
          const: Feature
          default: Feature
          title: Type
          type: string
        user:
          title: User
          type: string
      required:
      - geometry
      - properties
      title: Order
      type: object
    OrderCollection_OrderStatus_:
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        features:
          items:
            $ref: '#/components/schemas/Order_OrderStatus_'
          title: Features
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        type:
          const: FeatureCollection
          default: FeatureCollection
          title: Type
          type: string
      required:
      - features
      title: OrderCollection[OrderStatus]
      type: object
    OrderParameters:
      additionalProperties: false
      properties: {}
      title: OrderParameters
      type: object
    OrderPayload:
      properties:
        datetime:
          maxItems: 2
          minItems: 2
          prefixItems:
          - format: date-time
            type: string
          - format: date-time
            type: string
          title: Datetime
          type: array
        filter:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Filter
        geometry:
          discriminator:
            mapping:
              GeometryCollection: '#/components/schemas/GeometryCollection-Input'
              LineString: '#/components/schemas/LineString'
              MultiLineString: '#/components/schemas/MultiLineString'
              MultiPoint: '#/components/schemas/MultiPoint'
              MultiPolygon: '#/components/schemas/MultiPolygon'
              Point: '#/components/schemas/Point'
              Polygon: '#/components/schemas/Polygon'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/Point'
          - $ref: '#/components/schemas/MultiPoint'
          - $ref: '#/components/schemas/LineString'
          - $ref: '#/components/schemas/MultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/MultiPolygon'
          - $ref: '#/components/schemas/GeometryCollection-Input'
          title: Geometry
        order_parameters:
          $ref: '#/components/schemas/OrderParameters'
      required:
      - datetime
      - geometry
      - order_parameters
      title: OrderPayload
      type: object
    OrderProperties:
      additionalProperties: true
      properties:
        created:
          format: date-time
          title: Created
          type: string
        opportunity_properties:
          additionalProperties: true
          title: Opportunity Properties
          type: object
        order_parameters:
          additionalProperties: true
          title: Order Parameters
          type: object
        product_id:
          title: Product Id
          type: string
        search_parameters:
          $ref: '#/components/schemas/OrderSearchParameters'
        status:
          $ref: '#/components/schemas/OrderStatus'
      required:
      - product_id
      - created
      - status
      - search_parameters
      - opportunity_properties
      - order_parameters
      title: OrderProperties
      type: object
    OrderProperties_OrderStatus_:
      additionalProperties: true
      properties:
        created:
          format: date-time
          title: Created
          type: string
        opportunity_properties:
          additionalProperties: true
          title: Opportunity Properties
          type: object
        order_parameters:
          additionalProperties: true
          title: Order Parameters
          type: object
        product_id:
          title: Product Id
          type: string
        search_parameters:
          $ref: '#/components/schemas/OrderSearchParameters'
        status:
          $ref: '#/components/schemas/OrderStatus'
      required:
      - product_id
      - created
      - status
      - search_parameters
      - opportunity_properties
      - order_parameters
      title: OrderProperties[OrderStatus]
      type: object
    OrderSearchParameters:
      properties:
        datetime:
          title: Datetime
          type: string
        filter:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Filter
        geometry:
          discriminator:
            mapping:
              GeometryCollection: '#/components/schemas/GeometryCollection-Output'
              LineString: '#/components/schemas/LineString'
              MultiLineString: '#/components/schemas/MultiLineString'
              MultiPoint: '#/components/schemas/MultiPoint'
              MultiPolygon: '#/components/schemas/MultiPolygon'
              Point: '#/components/schemas/Point'
              Polygon: '#/components/schemas/Polygon'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/Point'
          - $ref: '#/components/schemas/MultiPoint'
          - $ref: '#/components/schemas/LineString'
          - $ref: '#/components/schemas/MultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/MultiPolygon'
          - $ref: '#/components/schemas/GeometryCollection-Output'
          title: Geometry
      required:
      - datetime
      - geometry
      title: OrderSearchParameters
      type: object
    OrderStatus:
      additionalProperties: true
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        reason_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason Code
        reason_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason Text
        status_code:
          $ref: '#/components/schemas/OrderStatusCode'
        timestamp:
          format: date-time
          title: Timestamp
          type: string
      required:
      - timestamp
      - status_code
      title: OrderStatus
      type: object
    OrderStatusCode:
      enum:
      - received
      - accepted
      - rejected
      - completed
      - cancelled
      - scheduled
      - held
      - processing
      - reserved
      - tasked
      - user_cancelled
      - expired
      - failed
      title: OrderStatusCode
      type: string
    OrderStatuses:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/OrderStatus'
          title: Statuses
          type: array
      required:
      - statuses
      title: OrderStatuses
      type: object
    Order_OrderStatus_:
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        created:
          format: date-time
          title: Created
          type: string
        geometry:
          discriminator:
            mapping:
              GeometryCollection: '#/components/schemas/GeometryCollection-Output'
              LineString: '#/components/schemas/LineString'
              MultiLineString: '#/components/schemas/MultiLineString'
              MultiPoint: '#/components/schemas/MultiPoint'
              MultiPolygon: '#/components/schemas/MultiPolygon'
              Point: '#/components/schemas/Point'
              Polygon: '#/components/schemas/Polygon'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/Point'
          - $ref: '#/components/schemas/MultiPoint'
          - $ref: '#/components/schemas/LineString'
          - $ref: '#/components/schemas/MultiLineString'
          - $ref: '#/components/schemas/Polygon'
          - $ref: '#/components/schemas/MultiPolygon'
          - $ref: '#/components/schemas/GeometryCollection-Output'
          title: Geometry
        id:
          title: Id
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        properties:
          $ref: '#/components/schemas/OrderProperties_OrderStatus_'
        stapi_type:
          const: Order
          default: Order
          title: Stapi Type
          type: string
        stapi_version:
          default: 0.1.0
          title: Stapi Version
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
          title: Status
        type:
          const: Feature
          default: Feature
          title: Type
          type: string
        user:
          title: User
          type: string
      required:
      - geometry
      - properties
      title: Order[OrderStatus]
      type: object
    Point:
      description: Point Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          anyOf:
          - $ref: '#/components/schemas/Position2D'
          - $ref: '#/components/schemas/Position3D'
          title: Coordinates
        type:
          const: Point
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: Point
      type: object
    Polygon:
      description: Polygon Model
      properties:
        bbox:
          anyOf:
          - maxItems: 4
            minItems: 4
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - maxItems: 6
            minItems: 6
            prefixItems:
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            - type: number
            type: array
          - type: 'null'
          title: Bbox
        coordinates:
          items:
            items:
              anyOf:
              - $ref: '#/components/schemas/Position2D'
              - $ref: '#/components/schemas/Position3D'
            minItems: 4
            type: array
          title: Coordinates
          type: array
        type:
          const: Polygon
          title: Type
          type: string
      required:
      - type
      - coordinates
      title: Polygon
      type: object
    Position2D:
      maxItems: 2
      minItems: 2
      prefixItems:
      - title: Longitude
        type: number
      - title: Latitude
        type: number
      type: array
    Position3D:
      maxItems: 3
      minItems: 3
      prefixItems:
      - title: Longitude
        type: number
      - title: Latitude
        type: number
      - title: Altitude
        type: number
      type: array
    Prefer:
      enum:
      - respond-async
      - wait
      title: Prefer
      type: string
    Product:
      properties:
        conformsTo:
          items:
            type: string
          title: Conformsto
          type: array
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        keywords:
          items:
            type: string
          title: Keywords
          type: array
        license:
          title: License
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        providers:
          items:
            $ref: '#/components/schemas/Provider'
          title: Providers
          type: array
        stapi_type:
          const: Product
          default: Product
          title: Stapi Type
          type: string
        stapi_version:
          default: 0.1.0
          title: Stapi Version
          type: string
        title:
          title: Title
          type: string
        type:
          const: Collection
          default: Collection
          title: Type
          type: string
      required:
      - id
      - description
      - license
      - links
      title: Product
      type: object
    ProductsCollection:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        products:
          description: STAPI Product objects are represented in JSON format and are
            very flexible. Any JSON object that contains all the required fields is
            a valid STAPI Product. A Product object contains a minimal set of required
            properties to be valid and can be extended through the use of queryables
            and parameters.
          items:
            $ref: '#/components/schemas/Product'
          title: Products
          type: array
      required:
      - links
      - products
      title: ProductsCollection
      type: object
    Provider:
      properties:
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
        roles:
          items:
            $ref: '#/components/schemas/ProviderRole'
          title: Roles
          type: array
        url:
          format: uri
          minLength: 1
          title: Url
          type: string
      required:
      - name
      title: Provider
      type: object
    ProviderRole:
      enum:
      - producer
      - licensor
      - processor
      - host
      title: ProviderRole
      type: string
    RequestMethod:
      enum:
      - GET
      - POST
      title: RequestMethod
      type: string
    RootResponse:
      properties:
        conformsTo:
          items:
            type: string
          title: Conformsto
          type: array
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        title:
          title: Title
          type: string
      required:
      - conformsTo
      - id
      - description
      - links
      title: RootResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.1.0
paths:
  /:
    get:
      description: '...'
      operationId: get_root__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'
          description: Successful Response
      summary: landing page
      tags:
      - Core
  /conformance:
    get:
      description: A list of all conformance classes specified in a standard that
        the server conforms to.
      operationId: get_conformance_conformance_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conformance'
          description: Successful Response
      summary: information about specifications that this API conforms to
      tags:
      - Core
  /orders:
    get:
      description: '...'
      operationId: get_orders_orders_get
      responses:
        '200':
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/OrderCollection_OrderStatus_'
          description: Successful Response
      summary: a list of orders
      tags:
      - Orders
  /orders/{orderId}:
    get:
      description: '...'
      operationId: get_order_orders__orderId__get
      parameters:
      - description: local identifier of an order
        in: path
        name: orderId
        required: true
        schema:
          description: local identifier of an order
          title: Orderid
          type: string
      responses:
        '200':
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Order_OrderStatus_'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: describe the order with id `orderId`
      tags:
      - Orders
  /orders/{orderId}/statuses:
    get:
      description: '...'
      operationId: get_order_statuses_orders__orderId__statuses_get
      parameters:
      - in: query
        name: order_id
        required: true
        schema:
          title: Order Id
          type: string
      - in: query
        name: next
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Next
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatuses'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: describe the statuses that the order with id `orderId` has had
      tags:
      - Orders
  /products:
    get:
      description: '...'
      operationId: get_products_products_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCollection'
          description: Successful Response
      summary: the products in the dataset
      tags:
      - Products
  /products/{productId}:
    get:
      description: '...'
      operationId: get_product_products__productId__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: Successful Response
      summary: describe the product with id `productId`
      tags:
      - Products
  /products/{productId}/opportunities:
    post:
      description: '...'
      operationId: search_opportunities_products__productId__opportunities_post
      parameters:
      - in: query
        name: prefer
        required: true
        schema:
          anyOf:
          - $ref: '#/components/schemas/Prefer'
          - type: 'null'
          title: Prefer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityCollection'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: create a new opportunity request for product with id `productId`
      tags:
      - Opportunities
  /products/{productId}/order-parameters:
    get:
      description: '...'
      operationId: get_product_order_parameters_products__productId__order_parameters_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Product Order Parameters Products  Productid  Order
                  Parameters Get
                type: object
          description: Successful Response
      summary: describe the order parameters for a product
      tags:
      - Products
  /products/{productId}/orders:
    get:
      description: '...'
      operationId: get_orders_products__productId__orders_get
      parameters:
      - in: query
        name: next
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Next
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          title: Limit
          type: integer
      responses:
        '200':
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/OrderCollection_OrderStatus_'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: get a list of orders for the specific product
      tags:
      - Orders
    post:
      description: '...'
      operationId: create_order_products__productId__orders_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPayload'
        required: true
      responses:
        '201':
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: create a new order for product with id `productId`
      tags:
      - Orders
  /products/{productId}/queryables:
    get:
      description: '...'
      operationId: get_product_queryables_products__productId__queryables_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Product Queryables Products  Productid  Queryables
                  Get
                type: object
          description: Successful Response
      summary: describe the queryables for a product
      tags:
      - Products
tags:
- description: Core endpoints
  name: Core
- description: Endpoint for creating and managing orders
  name: Orders
- description: Endpoint for viewing and accepting opportunities
  name: Opportunities
- description: Products
  name: Products
